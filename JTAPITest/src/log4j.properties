
#root = level name1  name2
#log4j.rootLogger = debug,A,B,C,D,E

log4j.rootLogger = info,A,C

//Only for JTAPI engine debug use.
log4j.logger.com.avaya.jtapi = ALL,JTAPI_LOG_APPENDER
# MUST set additivity property to 'false' . So , we can trace tsapi message in another log file		
log4j.additivity.com.avaya.jtapi=false

log4j.appender.JTAPI_LOG_APPENDER = org.apache.log4j.DailyRollingFileAppender
log4j.appender.JTAPI_LOG_APPENDER.encoding = UTF-8

log4j.appender.JTAPI_LOG_APPENDER.Threshold=Error
log4j.appender.JTAPI_LOG_APPENDER.File=../logs/tsapi.log
log4j.appender.JTAPI_LOG_APPENDER.DatePattern='.'yyyy-MM-dd
log4j.appender.JTAPI_LOG_APPENDER.layout = org.apache.log4j.PatternLayout
log4j.appender.JTAPI_LOG_APPENDER.layout.ConversionPattern= %d{yyyy-MM-dd HH:mm:ss} %m %n

log4j.appender.A = org.apache.log4j.ConsoleAppender
log4j.appender.A.encoding=UTF-8

#log4j.appender.B = org.apache.log4j.FileAppender
#log4j.appender.B.File =c:\\Filelog.log
#log4j.appender.B.encoding=UTF-8

log4j.appender.C = org.apache.log4j.DailyRollingFileAppender
log4j.appender.C.File =../logs/vms.log
log4j.appender.C.DatePattern='.'yyyy-MM-dd
log4j.appender.C.encoding=UTF-8

#log4j.appender.D = org.apache.log4j.RollingFileAppender
#log4j.appender.D.File =c:\\Rollinglog.log
#log4j.appender.D.MaxBackupIndex =3
#log4j.appender.D.MaxFileSize = 1KB
#log4j.appender.D.encoding=UTF-8

#log4j.appender.E = org.apache.log4j.jdbc.JDBCAppender
#log4j.appender.E.BufferSize = 40
#log4j.appender.E.Driver = com.microsoft.jdbc.sqlserver.SQLServerDriver
#log4j.appender.E.URL = jdbc:microsoft:sqlserver://127.0.0.1:1433;DatabaseName=nepalon
#log4j.appender.E.User = sa
#log4j.appender.E.Password = sa
#log4j.appender.E.encoding=UTF-8


#org.apache.log4j.HTMLLayout   以HTML表格形式布局
#org.apache.log4j.PatternLayout   可以灵活地指定布局模式
#org.apache.log4j.SimpleLayout    包含日志信息的级别和信息字符串
#org.apache.log4j.TTCCLayout  包含日志产生时间，线程和类别等信息

#%c 输出日志信息所属的类的全名
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，
#%d{yyy-MM-dd HH:mm:ss }，输出类似：2002-10-18- 22：10：28
#%l 输出日志事件的发生位置，即输出日志信息的语句处于它所在的类的第几行
#%m 输出代码中指定的信息，如log(message)中的message
#%n 输出一个回车换行符，Windows平台为"\r\n"，Unix平台为"\n"
#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。如果是调用debug()输出的，则为DEBUG，依此类推
#%r 输出自应用启动到输出该日志信息所耗费的毫秒数
#%t 输出产生该日志事件的线程名

#log4j.appender.A.layout = org.apache.log4j.SimpleLayout

log4j.appender.A.layout = org.apache.log4j.PatternLayout
log4j.appender.A.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %m %n

log4j.appender.C.layout = org.apache.log4j.PatternLayout
#log4j.appender.C.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss}:%p %l - %m%n%n
log4j.appender.C.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} %m %n

#log4j.appender.C.layout = org.apache.log4j.HTMLLayout

#log4j.appender.D.layout = org.apache.log4j.TTCCLayout

#log4j.appender.E.layout = org.apache.log4j.PatternLayout
#log4j.appender.E.ConversionPattern = INSERT INTO log4j (createDate, thread, priority, category, message) values(getdate(), '%t', '%-5p', '%c', '%m')
